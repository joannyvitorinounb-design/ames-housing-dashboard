# ==========================================================
# DASHBOARD INTERATIVO ‚Äî PRECIFICA√á√ÉO IMOBILI√ÅRIA (AMES HOUSING)
# ==========================================================
# Joanny Vit√≥ria Vitorino Duarte
# Tarefa 2 ‚Äî Sistemas de Informa√ß√£o em Engenharia de Produ√ß√£o (2025)
# ==========================================================

import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import statsmodels.api as sm
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error
from math import sqrt

st.set_page_config(page_title="Precifica√ß√£o Imobili√°ria ‚Äî Ames Housing", layout="wide")

# ----------------------------------------------------------
# 1. Carregar e preparar dados
# ----------------------------------------------------------
@st.cache_data
def load_data():
    df = pd.read_csv("AmesHousing.csv")
    df.columns = df.columns.str.strip().str.lower().str.replace(" ", "")
    df["houseage"] = df["yearbuilt"].max() - df["yearbuilt"]
    df = df.dropna(subset=["saleprice", "grlivarea", "overallqual", "garagecars", "neighborhood"])
    return df

df = load_data()

st.title("üè† Precifica√ß√£o Imobili√°ria ‚Äî Ames Housing")
st.markdown("""
### An√°lise Interativa
Explore como diferentes caracter√≠sticas influenciam o **pre√ßo dos im√≥veis** em Ames (EUA).
Use os filtros ao lado para visualizar os resultados da regress√£o linear e os gr√°ficos correspondentes.
""")

# ----------------------------------------------------------
# 2. Filtros interativos
# ----------------------------------------------------------
st.sidebar.header("üîç Filtros de Visualiza√ß√£o")
neighborhoods = st.sidebar.multiselect(
    "Bairros:",
    sorted(df["neighborhood"].unique()),
    default=sorted(df["neighborhood"].unique())
)
qual_min, qual_max = st.sidebar.slider(
    "Qualidade geral (OverallQual):",
    int(df["overallqual"].min()),
    int(df["overallqual"].max()),
    (5, 9)
)
garage_min, garage_max = st.sidebar.slider(
    "N√∫mero de vagas na garagem:",
    int(df["garagecars"].min()),
    int(df["garagecars"].max()),
    (1, 3)
)

# Aplicar filtros
filtered_df = df[
    (df["neighborhood"].isin(neighborhoods)) &
    (df["overallqual"].between(qual_min, qual_max)) &
    (df["garagecars"].between(garage_min, garage_max))
]

st.markdown(f"### üîé {len(filtered_df)} im√≥veis selecionados")

# ----------------------------------------------------------
# 3. Estat√≠sticas e gr√°fico de dispers√£o
# ----------------------------------------------------------
st.subheader("üìä Estat√≠sticas descritivas dos im√≥veis filtrados")
st.write(filtered_df[["saleprice", "grlivarea", "garagecars", "overallqual", "houseage"]].describe())

fig, ax = plt.subplots(figsize=(8, 5))
sns.scatterplot(data=filtered_df, x="grlivarea", y="saleprice", hue="neighborhood", alpha=0.7, ax=ax)
plt.title("Pre√ßo vs. √Årea Constru√≠da (GrLivArea)")
st.pyplot(fig)

# ----------------------------------------------------------
# 4. Regress√£o Log-Log
# ----------------------------------------------------------
filtered_df["log_price"] = np.log(filtered_df["saleprice"])
filtered_df["log_grlivarea"] = np.log(filtered_df["grlivarea"])

X = sm.add_constant(filtered_df["log_grlivarea"])
y = filtered_df["log_price"]
model = sm.OLS(y, X).fit()
filtered_df["pred_price"] = np.exp(model.predict(X))

r2 = r2_score(filtered_df["saleprice"], filtered_df["pred_price"])
rmse = sqrt(mean_squared_error(filtered_df["saleprice"], filtered_df["pred_price"]))
mae = mean_absolute_error(filtered_df["saleprice"], filtered_df["pred_price"])

st.subheader("üìà Modelo Log-Log ‚Äî Resultados")
st.markdown(f"""
- **R¬≤:** {r2:.3f}  
- **RMSE:** {rmse:,.0f}  
- **MAE:** {mae:,.0f}  
- **Elasticidade (√°rea constru√≠da):** {model.params["log_grlivarea"]:.3f}
""")

# ----------------------------------------------------------
# 5. Interpreta√ß√£o
# ----------------------------------------------------------
st.markdown("""
### üß† Interpreta√ß√£o
O modelo **log-log** mostra a rela√ß√£o entre o tamanho do im√≥vel e seu pre√ßo:
- Cada **1% de aumento na √°rea constru√≠da** est√° associado a um **aumento de aproximadamente Œ≤% no pre√ßo de venda**.
- A regress√£o apresentou bom ajuste (R¬≤ elevado), indicando que o tamanho do im√≥vel explica boa parte da varia√ß√£o do pre√ßo.

Isso refor√ßa que **im√≥veis maiores, em bairros valorizados e com melhor qualidade geral** t√™m **valores de mercado mais altos**.
""")

# ----------------------------------------------------------
# 6. Compara√ß√£o Real vs. Previsto
# ----------------------------------------------------------
fig2, ax2 = plt.subplots(figsize=(8, 5))
sns.scatterplot(x=filtered_df["saleprice"], y=filtered_df["pred_price"], alpha=0.7, ax=ax2)
plt.plot(
    [filtered_df["saleprice"].min(), filtered_df["saleprice"].max()],
    [filtered_df["saleprice"].min(), filtered_df["saleprice"].max()],
    color="red", linestyle="--"
)
plt.title("Pre√ßo Real vs. Pre√ßo Previsto (Modelo Log-Log)")
plt.xlabel("Pre√ßo Real")
plt.ylabel("Pre√ßo Previsto")
st.pyplot(fig2)

st.markdown("---")
st.caption("Trabalho desenvolvido por **Joanny Vit√≥ria Vitorino Duarte** ‚Äî Tarefa 2: Precifica√ß√£o Imobili√°ria (2025)")
